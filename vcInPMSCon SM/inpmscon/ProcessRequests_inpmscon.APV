[MODULE]
NAME 'ProcessRequests_inpmscon.clw'
[COMMON]
FROM ABC GENERATED
[PROCEDURE]
NAME ProcessRequests
[COMMON]
FROM ABC Source
[DATA]
[SCREENCONTROLS]
! PROMPT('Sav Position:'),USE(?SavPosition:Prompt)
! ENTRY(@s255),USE(SavPosition)
[REPORTCONTROLS]
! STRING(@s255),USE(SavPosition)
SavPosition              STRING(260)
!!> GUID('7e1493ec-de76-4f21-b891-c64a01c839de'),PROMPT('Sav Position:'),HEADER('Sav Position'),PICTURE(@s255),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT(':'),USE(?loc:ErrorCode:Prompt)
! ENTRY(@n-14),USE(loc:ErrorCode),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(loc:ErrorCode),RIGHT(1)
loc:ErrorCode            LONG
!!> GUID('3aa36da0-25b1-4492-8935-e9f3c130c7d2'),PROMPT(':'),HEADER('loc : Error Code'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('loc : Error:'),USE(?loc:Error:Prompt)
! ENTRY(@s254),USE(loc:Error)
[REPORTCONTROLS]
! STRING(@s254),USE(loc:Error)
loc:Error                CSTRING(255)
!!> GUID('2edd4b22-edb7-4905-8c68-f568ac27ca64'),PROMPT('loc : Error:'),HEADER('loc : Error'),PICTURE(@s254),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('QT ipos De Cuarto:'),USE(?QTiposDeCuarto:Prompt)
! ENTRY(@s20),USE(QTiposDeCuarto)
[REPORTCONTROLS]
! STRING(@s20),USE(QTiposDeCuarto)
QTiposDeCuarto           QUEUE(TiposDeCuartoQueue),PRE(QTC)
!!> GUID('56317eed-f98c-41f9-9d00-1d034d5be374'),PROMPT('QT ipos De Cuarto:'),HEADER('QT ipos De Cuarto'),PICTURE(@s20),TYPEMODE(INS)
                         END
!!> GUID('15629d24-7ae7-40a1-856a-59ef445164f7')
[FILES]
[OTHERS]
HCAVARI
pmsReq
[PROMPTS]
%GenerateOpenClose LONG  (1)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
!    MonitorSMDisplay('ProcessRequests...')
    LoadPMSLOG() !--Carga registros nuevos de LTC/ICR/IPM
    DO OpenFiles
    LOOP
        FREE(QInventory)
        FREE(QAvailability)
        CLEAR(glo:numberRequest)
        CLEAR(glo:methodRequest)
        CLEAR(glo:EchoTokenRQ)
        LOGOUT(1,pmsReq)
        IF ERRORCODE()
            UpdatePMSBIT('ProcessRequest','Logout - Error '&ERROR()&'('&ERRORCODE()&')')
            MonitorSMDisplay('Logout Error(view log)')
            BREAK
        END
        CLEAR(PRQ:Record)
        PRQ:Status = 0
        SET(PRQ:statusDateTime_fk, PRQ:statusDateTime_fk)
        LOOP UNTIL Access:pmsReq.Next() OR PRQ:Status <> 0
            IF NOT glo:numberRequest
                glo:numberRequest = PRQ:number
                glo:methodRequest = PRQ:method
                glo:EchoTokenRQ = XML:CreateEchoToken()
                IF glo:methodRequest = AvailabilityNotify
                    IF NOT RECORDS(QTiposDeCuarto) THEN Get_TiposDeCuarto().
                END
            END
            IF PRQ:method <> glo:methodRequest THEN BREAK.
            CASE PRQ:method
            OF AvailabilityNotify
                CLEAR(QInventory)
                QInventory.roomType = CLIP(PRQ:data1)
                QInventory.date = CLIP(PRQ:data2)
                GET(QInventory,QInventory.roomType,QInventory.date)
                IF ERRORCODE() = 30 THEN ADD(QInventory).
                QInventory.ttlGtz = DEFORMAT(PRQ:data3)
                QInventory.ttlNGtz = DEFORMAT(PRQ:data4)
                QInventory.ttlFS = DEFORMAT(PRQ:data5)
                QInventory.ttlDisp = Get_BookingLimit(CLIP(QInventory.roomType),QInventory.ttlGtz,QInventory.ttlNGtz,QInventory.ttlFS)
                PUT(QInventory)
            OF StopSell OROF OpenSell OROF StopSellArrival OROF OpenSellArrival|
            OROF StopSellDeparture OROF OpenSellDeparture OROF StopSellArrivalAndDeparture OROF OpenSellArrivalAndDeparture
                CLEAR(QAvailability)
                QAvailability.dateStart = FORMAT(DEFORMAT(PRQ:data2,@D12),@D10-)
                QAvailability.dateEnd = FORMAT(DEFORMAT(PRQ:data3,@D12),@D10-)
                QAvailability.invTypeCode = PRQ:data1
                GET(QAvailability,QAvailability.dateStart,QAvailability.dateEnd,QAvailability.invTypeCode)
                IF ERRORCODE() = 30 THEN ADD(QAvailability).
                PUT(QAvailability)
            END
            PRQ:Status = 1
            IF Access:pmsReq.TryUpdate() <> Level:Benign
                GlobalErrors.SetErrors()
                loc:ErrorCode = GlobalErrors.GetErrorcode()
                loc:Error = GlobalErrors.GetError()
                ROLLBACK()
                UpdatePMSBIT('PmsReqUpload','It was not possible to update status in request number::'&DEFORMAT(PRQ:number)&'<13,10>Error: '&loc:Error&'('&loc:ErrorCode&')')
                MonitorSMDisplay('It was not possible to update status in request number(view log for details).')
                BREAK
            END
        END
        COMMIT()
        IF loc:ErrorCode THEN BREAK.
        IF RECORDS(QAvailability) OR RECORDS(QInventory)
            DO ProcessPackage
        ELSE
            BREAK
        END
    END
    DO CloseFiles
    POST(EVENT:StartTimerPMS,,glo:MonitorSMThread)
[END]
EMBED %ProcedureRoutines
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3600
PROPERTY:END
QInventoryToQAvailability    ROUTINE
DATA
nextRec1    LONG
nextRec2    LONG
daysDifference      LONG
isNewPeriod BYTE
CODE
    SORT(QInventory,+QInventory.roomType,+QInventory.date)
    LOOP nextRec1 = 1 TO RECORDS(QInventory)
        GET(QInventory,nextRec1)
        QInventory.date = FORMAT(DEFORMAT(QInventory.date,@D12),@D10-)
        PUT(QInventory)
    END
    ! Obtiene periodos
    LOOP nextRec1 = 1 TO RECORDS(QInventory)
        GET(QInventory,nextRec1)
        isNewPeriod = 1
        LOOP nextRec2 = 1 TO RECORDS( QAvailability)
            GET(QAvailability,nextRec2)
            IF QAvailability.invTypeCode <> QInventory.roomType THEN CYCLE.
            IF QInventory.date => QAvailability.dateStart
                IF QInventory.date =< QAvailability.dateEnd
                    IF QInventory.ttlDisp = QAvailability.bookingLimit
                        QAvailability.dateEnd = QInventory.date
                        PUT(QAvailability)
                        isNewPeriod = 0
                    END
                ELSE
                    daysDifference = DEFORMAT(QInventory.date,@D10-) - DEFORMAT(QAvailability.dateEnd,@D10-)
                    IF daysDifference = 1
                        IF QInventory.ttlDisp = QAvailability.bookingLimit
                            QAvailability.dateEnd = QInventory.date
                            PUT(QAvailability)
                            isNewPeriod = 0
                        END
                    END
                END
            END
        END
        IF isNewPeriod = 1
            QAvailability.dateStart = QInventory.date
            QAvailability.dateEnd   = QInventory.date
            QAvailability.invTypeCode = QInventory.roomType
            QAvailability.bookingLimit = QInventory.ttlDisp
            ADD(QAvailability)
        END
    END
!    MonitorSMDisplay('Fill_QAvailability|Records=' & RECORDS(QAvailability))
    EXIT
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3600
PROPERTY:END
ProcessPackage      ROUTINE
    IF glo:methodRequest
        MonitorSMDisplay('ProcessPackage: '&CLIP(glo:methodRequest)&' Number: '&glo:numberRequest)
        CASE glo:methodRequest
        OF AvailabilityNotify
            IF RECORDS(QInventory) THEN DO QInventoryToQAvailability.
            IF RECORDS(QAvailability) THEN OTA_HotelAvailNotifRQ().
        OF StopSell OROF OpenSell OROF StopSellArrival OROF OpenSellArrival OROF StopSellDeparture OROF OpenSellDeparture OROF StopSellArrivalAndDeparture OROF OpenSellArrivalAndDeparture
            IF RECORDS(QAvailability) THEN OTA_HotelAvailNotifRQ().
        ELSE
            MonitorSMDisplay('ProcessResquests/ProcessPackage: unknown method('&glo:methodRequest&') Number: '&glo:numberRequest)
        END
    END
    EXIT
[END]
EMBED %LocalProcedures
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Get_TiposDeCuarto   PROCEDURE
CODE
    FREE(QTiposDeCuarto)
    CLEAR(CVAR:Record)
    CVAR:SVARTIPCAT = '1'
    SET(CVAR:KEY_HCAVARI,CVAR:KEY_HCAVARI)
    LOOP UNTIL Access:HCAVARI.Next() OR CVAR:SVARTIPCAT <> '1'
        CLEAR(QTiposDeCuarto)
        QTiposDeCuarto.codigo = CVAR:SVARCODIGO
        QTiposDeCuarto.cantidad = HCAVARI.RVARCTR1 - HCAVARI.RVARCTR4
        ADD(QTiposDeCuarto)
    END
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Get_BookingLimit    PROCEDURE(string pRoomTypeCode,long pGtz,long pNgtz,long pFS)
CODE
    CLEAR(QTiposDeCuarto)
    QTiposDeCuarto.codigo = pRoomTypeCode
    GET(QTiposDeCuarto,QTiposDeCuarto.codigo)
    IF NOT ERRORCODE()
        RETURN (QTiposDeCuarto.cantidad  - (pGtz + pNgtz + pFS))
    ELSE
        MonitorSMDisplay('No type of room was found in the inhotel database: '& pRoomTypeCode &' error: '&ERRORCODE())
        UpdatePMSBIT('ProcessRequests - Get_BookingLimit - Error','No type of room was found in the inhotel database: '& pRoomTypeCode &' error: '&ERRORCODE())
        RETURN 0
    END
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
                    MAP
Get_TiposDeCuarto       PROCEDURE
Get_BookingLimit        PROCEDURE(string pRoomTypeCode,long pGtz,long pNgtz,long pFS),LONG
                    END
[END]
[END]
[ADDITION]
NAME WinEvent WinEvent
[INSTANCE]
INSTANCE 1
OWNER 3
[PROMPTS]
%DisableWinEvent LONG  (0)
%CheckForCantCloseNowSetHere LONG  (1)
%AutoDown LONG  (0)
%NoAutoDown LONG  (0)
%LocWindowsVisible DEFAULT  ('0')
%WindowsVisibleAfterOpen LONG  (1)
%AlertWinEventDebug LONG  (0)
%DisplayCompileDate LONG  (0)
%DisplayCompileDateFormat DEFAULT  ('@D6')
%locNoHandleCloseDown LONG  (0)
%locCloseDownWhenWindowCloses LONG  (0)
%locCloseDownWhenWindowClosesCtrl DEFAULT  ('')
%WinAlert MULTI LONG  ()
%Mess DEPEND %WinAlert DEFAULT TIMES 0

%Act1 DEPEND %WinAlert DEFAULT TIMES 0

%act2 DEPEND %WinAlert DEFAULT TIMES 0

%locCloseDownWhenWindowClosesSet LONG  (0)
%SortListbox MULTI LONG  ()
%ThisListbox DEPEND %SortListbox DEFAULT TIMES 0

%ThisListboxHeader DEPEND %SortListbox MULTI DEFAULT TIMES 0

%gloWinEventTesting LONG  (0)
%gloWinEventTestingColor1 LONG  (15728618)
%gloWinEventTestingColor2 LONG  (16777215)
[CALLS]
OTA_HotelAvailNotifRQ
LoadPMSLOG
[END]
