[MODULE]
NAME 'OTA_HotelAvailNotifRQ_inpmscon.clw'
[COMMON]
FROM ABC GENERATED
[PROCEDURE]
NAME OTA_HotelAvailNotifRQ
[COMMON]
FROM ABC Source
[DATA]
[SCREENCONTROLS]
! PROMPT('restriction Status:'),USE(?restrictionStatus:Prompt)
! ENTRY(@n3),USE(restrictionStatus)
[REPORTCONTROLS]
! STRING(@n3),USE(restrictionStatus)
restrictionStatus        BYTE
!!> GUID('5d32aaf7-f3c8-4b25-98d3-f38dd675c7ef'),PROMPT('restriction Status:'),HEADER('restriction Status'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Sav Position:'),USE(?SavPosition:Prompt)
! ENTRY(@s255),USE(SavPosition)
[REPORTCONTROLS]
! STRING(@s255),USE(SavPosition)
SavPosition              STRING(260)
!!> GUID('6b453865-4803-4141-8e1c-c625e098b3f1'),PROMPT('Sav Position:'),HEADER('Sav Position'),PICTURE(@s255),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (1)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    IF RECORDS(QAvailability)
        glo:xmlHeader = Get_XMLHeader()
        Glo:XmlError = XML:CreateXMLString('1.0','UTF-8',FALSE,'')
        IF NOT Glo:XmlError
            XML:CreateParent('soap:Envelope')
            XML:CreateAttribute('xmlns:soap','http://schemas.xmlsoap.org/soap/envelope/');XML:AddParent()
            XML:AddStringText(glo:xmlHeader,2)
            XML:CreateParent('soap:Body');XML:AddParent()
            XML:CreateParent('OTA_HotelAvailNotifRQ')
            XML:CreateAttribute('xmlns','http://www.opentravel.org/OTA/2003/05')
            XML:CreateAttribute('Version','1.0')
            XML:CreateAttribute('TimeStamp',XML:ConvertToGMT())
            XML:CreateAttribute('EchoToken',glo:EchoTokenRQ);XML:AddParent()
            XML:CreateParent('POS');XML:AddParent()
            XML:CreateParent('Source');XML:AddParent()
            XML:CreateParent('RequestorID')
            XML:CreateAttribute('Type','22')
            XML:CreateAttribute('ID',CLIP(LEFT(GCredentials.requestorID)));XML:AddParent(TRUE)
            XML:CloseParent('Source')
            XML:CloseParent('POS')
            XML:CreateParent('AvailStatusMessages')
            XML:CreateAttribute('HotelCode',CLIP(LEFT(GCredentials.hotelCode)));XML:AddParent()
            LOOP nRecord = 1 TO RECORDS(QAvailability)
                GET(QAvailability,nRecord)
                XML:CreateParent('AvailStatusMessage')
                IF glo:methodRequest = AvailabilityNotify THEN XML:CreateAttribute('BookingLimit',QAvailability.bookingLimit).
                XML:AddParent()
                XML:CreateParent('StatusApplicationControl')
                XML:CreateAttribute('Start',QAvailability.dateStart)
                XML:CreateAttribute('End',QAvailability.dateEnd)
                XML:CreateAttribute('InvTypeCode',CLIP(QAvailability.invTypeCode));XML:AddParent(TRUE)
                CASE glo:methodRequest
                OF AvailabilityNotify
                OF StopSell
                    XML:CreateParent('RestrictionStatus')
                    XML:CreateAttribute('Status','Close');XML:AddParent(TRUE)
                OF OpenSell
                    XML:CreateParent('RestrictionStatus')
                    XML:CreateAttribute('Status','Open');XML:AddParent(TRUE)
                OF StopSellArrival
                    XML:CreateParent('RestrictionStatus')
                    XML:CreateAttribute('Restriction','Arrival')
                    XML:CreateAttribute('Status','Close');XML:AddParent(TRUE)
                OF OpenSellArrival
                    XML:CreateParent('RestrictionStatus')
                    XML:CreateAttribute('Restriction','Arrival')
                    XML:CreateAttribute('Status','Open');XML:AddParent(TRUE)
                OF StopSellArrivalAndDeparture
                    XML:CreateParent('RestrictionStatus')
                    XML:CreateAttribute('Restriction','Arrival')
                    XML:CreateAttribute('Status','Close');XML:AddParent(TRUE)
                    XML:CreateParent('RestrictionStatus')
                    XML:CreateAttribute('Restriction','Departure')
                    XML:CreateAttribute('Status','Close');XML:AddParent(TRUE)
                OF OpenSellArrivalAndDeparture
                    XML:CreateParent('RestrictionStatus')
                    XML:CreateAttribute('Restriction','Arrival')
                    XML:CreateAttribute('Status','Open');XML:AddParent(TRUE)
                    XML:CreateParent('RestrictionStatus')
                    XML:CreateAttribute('Restriction','Departure')
                    XML:CreateAttribute('Status','Open');XML:AddParent(TRUE)
                OF StopSellDeparture
                    XML:CreateParent('RestrictionStatus')
                    XML:CreateAttribute('Restriction','Departure')
                    XML:CreateAttribute('Status','Close');XML:AddParent(TRUE)
                OF OpenSellDeparture
                    XML:CreateParent('RestrictionStatus')
                    XML:CreateAttribute('Restriction','Departure')
                    XML:CreateAttribute('Status','Open');XML:AddParent(TRUE)
                END
                XML:CloseParent('AvailStatusMessage')
            END
            XML:CloseParent('AvailStatusMessages')
            XML:CloseParent('OTA_HotelAvailNotifRQ')
            XML:CloseParent('soap:Body')
            XML:CloseParent('soap:Envelope')
            glo:XMLRequest = XML:CloseXMLString()
            isSuccessful = 1
        ELSE
            UpdatePMSBIT('OTA_HotelAvailNotifRQ - XMLError','Could not create xml file OTA_HotelAvailNotifRQ, Error:'&XML:GetError(Glo:XmlError)&'('&Glo:XmlError&')')
        END
        IF isSuccessful = 1
            InsertPmsXmlRq()
            IF WebClient() = Level:Benign
                InsertPmsXmlRs()
                MonitorSMDisplay('Availability Notification Successful.')
            END
        END
    END
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
nRecord             SHORT
isSuccessful        LONG
[END]
[END]
[ADDITION]
NAME WinEvent WinEvent
[INSTANCE]
INSTANCE 1
OWNER 3
[PROMPTS]
%DisableWinEvent LONG  (0)
%CheckForCantCloseNowSetHere LONG  (1)
%AutoDown LONG  (0)
%NoAutoDown LONG  (0)
%LocWindowsVisible DEFAULT  ('0')
%WindowsVisibleAfterOpen LONG  (1)
%AlertWinEventDebug LONG  (0)
%DisplayCompileDate LONG  (0)
%DisplayCompileDateFormat DEFAULT  ('@D6')
%locNoHandleCloseDown LONG  (0)
%locCloseDownWhenWindowCloses LONG  (0)
%locCloseDownWhenWindowClosesCtrl DEFAULT  ('')
%WinAlert MULTI LONG  ()
%Mess DEPEND %WinAlert DEFAULT TIMES 0

%Act1 DEPEND %WinAlert DEFAULT TIMES 0

%act2 DEPEND %WinAlert DEFAULT TIMES 0

%locCloseDownWhenWindowClosesSet LONG  (0)
%SortListbox MULTI LONG  ()
%ThisListbox DEPEND %SortListbox DEFAULT TIMES 0

%ThisListboxHeader DEPEND %SortListbox MULTI DEFAULT TIMES 0

%gloWinEventTesting LONG  (0)
%gloWinEventTestingColor1 LONG  (15728618)
%gloWinEventTestingColor2 LONG  (16777215)
[CALLS]
Get_XMLHeader
InsertPmsXmlRq
InsertPmsXmlRs
WebClient
[END]
