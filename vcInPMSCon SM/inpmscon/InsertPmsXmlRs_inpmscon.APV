[MODULE]
NAME 'InsertPmsXmlRs_inpmscon.clw'
[COMMON]
FROM ABC GENERATED
[PROCEDURE]
NAME InsertPmsXmlRs
[COMMON]
FROM ABC Source
[DATA]
[SCREENCONTROLS]
! PROMPT('Xml File Name:'),USE(?XmlFileName:Prompt)
! ENTRY(@s254),USE(XmlFileName)
[REPORTCONTROLS]
! STRING(@s254),USE(XmlFileName)
XmlFileName              CSTRING(255)
!!> GUID('114ce441-0713-420e-b441-2df623c14e53'),PROMPT('Xml File Name:'),HEADER('Xml File Name'),PICTURE(@s254),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('guid:'),USE(?guid:Prompt)
! ENTRY(@s16),USE(guid)
[REPORTCONTROLS]
! STRING(@s16),USE(guid)
guid                     STRING(16)
!!> GUID('7f82a0b5-e6e5-49dc-b331-e996828120ad'),PROMPT('guid:'),HEADER('guid'),PICTURE(@s16),TYPEMODE(INS)
[FILES]
[OTHERS]
pmsXmlRs
[PROMPTS]
%GenerateOpenClose LONG  (1)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    !--_Quita la url del name space porque no existe y genera error en el template iQ-XML-------
    XmlResponse = XML:Replace(glo:XMLResponse,'xmlns="http://www.opentravel.org/OTA/2003/05"','')
    !-------------------------------------------------------------------------------------------
    glo:EchoTokenRS = glo:EchoTokenRQ
    XML:SetProgressWindow(-1)
    XML:SetEncoding('UTF-8')
    Glo:XmlError = XML:LoadFromString(XmlResponse)
    IF NOT GLO:XmlError
        GLO:XmlError = Xml:FindNextNode('EchoToken')
        IF NOT Glo:XmlError
            Glo:XmlError = XML:ReadCurrentData(glo:EchoTokenRS)
        END
        XML:Free()
    END
    CLEAR(XmlResponse)
    XmlFileName = PATH()& '\XMLFiles\' & glo:EchoTokenRS & ' - RS.xml'
    ConvertXMLStringToXMLFile(glo:XMLResponse,XmlFileName)
    DO OpenFiles
    CLEAR(xrs:Record)
    xrs:echoToken = glo:EchoTokenRS
    xrs:numPmsReq = glo:numberRequest
    xrs:date = TODAY()
    xrs:time = CLOCK()
    IF Get_XMLSuccess() = Level:Benign
        xrs:success = 1
    END
    IF FILETOBLOB(XmlFileName, xrs:XmlFile)  !returns an ERRORCODE if copy fails
        UpdatePMSBIT('InsertRecordResponse/FILETOBLOB',CLIP(XmlFileName) & ' was not copied -  ERRORCODE: ' & ERRORCODE())
    END
    IF Access:PMSXMLRS.TryInsert() <> Level:Benign
        GlobalErrors.SetErrors()
        UpdatePMSBIT('InsertPmsXmlRs-Error',GlobalErrors.GetError()&'('&GlobalErrors.GetErrorcode()&')')
        MonitorSMDisplay('No fue posible insertar registro en PMSXMLRS(view log)')
    END
    DO CloseFiles
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
                    MAP
Get_XMLSuccess          PROCEDURE,LONG
                    END
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
XmlResponse             CSTRING(MaxCstringSize)
[END]
EMBED %LocalProcedures
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Get_XMLSuccess      PROCEDURE
CODE
    IF INSTRING('<<Success/>',CLIP(glo:XMLResponse),1,1)
        RETURN Level:Benign
    ELSE
        RETURN Level:User
    END

[END]
[END]
[ADDITION]
NAME WinEvent WinEvent
[INSTANCE]
INSTANCE 1
OWNER 3
[PROMPTS]
%DisableWinEvent LONG  (0)
%CheckForCantCloseNowSetHere LONG  (1)
%AutoDown LONG  (0)
%NoAutoDown LONG  (0)
%LocWindowsVisible DEFAULT  ('0')
%WindowsVisibleAfterOpen LONG  (1)
%AlertWinEventDebug LONG  (0)
%DisplayCompileDate LONG  (0)
%DisplayCompileDateFormat DEFAULT  ('@D6')
%locNoHandleCloseDown LONG  (0)
%locCloseDownWhenWindowCloses LONG  (0)
%locCloseDownWhenWindowClosesCtrl DEFAULT  ('')
%WinAlert MULTI LONG  ()
%Mess DEPEND %WinAlert DEFAULT TIMES 0

%Act1 DEPEND %WinAlert DEFAULT TIMES 0

%act2 DEPEND %WinAlert DEFAULT TIMES 0

%locCloseDownWhenWindowClosesSet LONG  (0)
%SortListbox MULTI LONG  ()
%ThisListbox DEPEND %SortListbox DEFAULT TIMES 0

%ThisListboxHeader DEPEND %SortListbox MULTI DEFAULT TIMES 0

%gloWinEventTesting LONG  (0)
%gloWinEventTestingColor1 LONG  (15728618)
%gloWinEventTestingColor2 LONG  (16777215)
[CALLS]
ConvertXMLStringToXMLFile
[END]
