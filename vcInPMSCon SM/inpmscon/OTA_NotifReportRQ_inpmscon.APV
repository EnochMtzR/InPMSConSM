[MODULE]
NAME 'OTA_NotifReportRQ_inpmscon.clw'
[COMMON]
FROM ABC GENERATED
[PROCEDURE]
NAME OTA_NotifReportRQ
[COMMON]
FROM ABC Source
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
IF RECORDS(QNotifReportSuccess)
    IF NotifyReservationsSuccessfully() = Level:Benign
        InsertPmsXmlRq()
        IF WebClient() = Level:Benign
            InsertPmsXmlRs()
        ELSE
            MonitorSMDisplay('Webclient Error(view log).')
        END
    END
END
IF RECORDS(QNotifReportError)
    NotifyReservationsWithError()
END
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
                    MAP
NotifyReservationsSuccessfully  PROCEDURE,LONG
NotifyReservationsWithError     PROCEDURE
                    END
[END]
EMBED %LocalProcedures
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
NotifyReservationsSuccessfully      PROCEDURE
CODE
    MonitorSMDisplay('NotifyReservationsSuccessfully...')
    IF RECORDS(QNotifReportSuccess)
        CLEAR(glo:XMLRequest)
        IF NOT XML:CreateXMLString('1.0','UTF-8',FALSE,'')
            XML:CreateParent('soap:Envelope')
            XML:CreateAttribute('xmlns:soap','http://schemas.xmlsoap.org/soap/envelope/');XML:AddParent()
            XML:AddStringText(glo:xmlHeader,2)
            XML:CreateParent('soap:Body');XML:AddParent()
            XML:CreateParent('OTA_NotifReportRQ')
            XML:CreateAttribute('xmlns','http://www.opentravel.org/OTA/2003/05')
            XML:CreateAttribute('Version','1.0')
            XML:CreateAttribute('TimeStamp',XML:ConvertToGMT())
            XML:CreateAttribute('EchoToken',glo:EchoTokenRS);XML:AddParent()
            XML:CreateParent('Success');XML:AddParent(True)
            XML:CreateParent('NotifDetails');XML:AddParent()
            XML:CreateParent('HotelNotifReport');XML:AddParent()
            XML:CreateParent('HotelReservations');XML:AddParent()
            LOOP INRS# = 1 TO RECORDS(QNotifReportSuccess)
                GET(QNotifReportSuccess,INRS#)
                XML:CreateParent('HotelReservation')
                CASE QNotifReportSuccess.ResStatus
                OF 'Book';XML:CreateAttribute('CreateDateTime',QNotifReportSuccess.DateTimeUpdate)
                ELSE;XML:CreateAttribute('LastModifyDateTime',QNotifReportSuccess.DateTimeUpdate)
                END
                XML:CreateAttribute('ResStatus',QNotifReportSuccess.ResStatus)
                XML:AddParent()
                XML:CreateParent('UniqueID')
                XML:CreateAttribute('Type','16')
                XML:CreateAttribute('ID',QNotifReportSuccess.uniqueID16)
                XML:AddParent(TRUE)
                XML:CreateParent('ResGlobalInfo')
                XML:AddParent()
                XML:CreateParent('HotelReservationIDs')
                XML:AddParent()
                XML:CreateParent('HotelReservationID')
                XML:CreateAttribute('ResID_Type','14')
                XML:CreateAttribute('ResID_Value',DEFORMAT(QNotifReportSuccess.pmsID))
                XML:AddParent(TRUE)
                XML:CloseParent('HotelReservationIDs')
                XML:CloseParent('ResGlobalInfo')
                XML:CloseParent('HotelReservation')
            END
            XML:CloseParent('HotelReservations')
            XML:CloseParent('HotelNotifReport')
            XML:CloseParent('NotifDetails')
            XML:CloseParent('OTA_NotifReportRQ ')
            XML:CloseParent('soap:Body')
            XML:CloseParent('soap:Envelope')
            glo:XMLRequest = XML:CloseXMLString()
            RETURN Level:Benign
        ELSE
            RETURN Level:Fatal
        END
    ELSE
        RETURN Level:Fatal
    END
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
NotifyReservationsWithError PROCEDURE
CODE
    MonitorSMDisplay('NotifyReservationsWithError...')
    IF RECORDS(QNotifReportError)
        CLEAR(glo:XMLRequest)
        LOOP INRE# = 1 TO RECORDS(QNotifReportError)
            GET(QNotifReportError,INRE#)
            CLEAR(glo:XMLRequest)
            IF NOT XML:CreateXMLString('1.0','UTF-8',FALSE,'')
                XML:CreateParent('soap:Envelope')
                XML:CreateAttribute('xmlns:soap','http://schemas.xmlsoap.org/soap/envelope/');XML:AddParent()
                XML:AddStringText(glo:xmlHeader,2)
                XML:CreateParent('soap:Body');XML:AddParent()
                XML:CreateParent('OTA_NotifReportRQ')
                XML:CreateAttribute('xmlns','http://www.opentravel.org/OTA/2003/05')
                XML:CreateAttribute('Version','1.0')
                XML:CreateAttribute('TimeStamp',XML:ConvertToGMT())
                XML:CreateAttribute('EchoToken',glo:EchoTokenRS);XML:AddParent()
                XML:CreateParent('Errors');XML:AddParent()
                XML:CreateParent('Error')
                XML:CreateAttribute('Type',QNotifReportError.ErrorType)
                XML:CreateAttribute('Code',QNotifReportError.ErrorCode)
                XML:AddParent(TRUE,CLIP(QNotifReportError.ErrorDescripcion))
                XML:CloseParent('Errors')
                XML:CreateParent('NotifDetails');XML:AddParent()
                XML:CreateParent('HotelNotifReport');XML:AddParent()
                XML:CreateParent('HotelReservations');XML:AddParent()
                XML:CreateParent('HotelReservation')
                XML:CreateAttribute('CreateDateTime',FORMAT(TODAY(),@D10-)&'T'&FORMAT(CLOCK(),@T04))
                XML:CreateAttribute('ResStatus',QNotifReportError.ResStatus)
                XML:AddParent()
                XML:CreateParent('UniqueID')
                XML:CreateAttribute('Type','16')
                XML:CreateAttribute('ID',QNotifReportError.uniqueID16)
                XML:AddParent(TRUE)
                XML:CloseParent('HotelReservation')
                XML:CloseParent('HotelReservations')
                XML:CloseParent('HotelNotifReport')
                XML:CloseParent('NotifDetails')
                XML:CloseParent('OTA_NotifReportRQ')
                XML:CloseParent('soap:Body')
                XML:CloseParent('soap:Envelope')
                glo:XMLRequest = XML:CloseXMLString()
                XML:Free()
                InsertPmsXmlRq()
                IF WebClient() = Level:Benign
                    InsertPmsXmlRs()
                    !OTA_ResRetrieveRS() !--Procesa response
                ELSE
                    MonitorSMDisplay('Webclient Error(view log).')
                END
            END
        END
    END
[END]
[END]
[ADDITION]
NAME WinEvent WinEvent
[INSTANCE]
INSTANCE 1
OWNER 3
[PROMPTS]
%DisableWinEvent LONG  (0)
%CheckForCantCloseNowSetHere LONG  (1)
%AutoDown LONG  (0)
%NoAutoDown LONG  (0)
%LocWindowsVisible DEFAULT  ('0')
%WindowsVisibleAfterOpen LONG  (1)
%AlertWinEventDebug LONG  (0)
%DisplayCompileDate LONG  (0)
%DisplayCompileDateFormat DEFAULT  ('@D6')
%locNoHandleCloseDown LONG  (0)
%locCloseDownWhenWindowCloses LONG  (0)
%locCloseDownWhenWindowClosesCtrl DEFAULT  ('')
%WinAlert MULTI LONG  ()
%Mess DEPEND %WinAlert DEFAULT TIMES 0

%Act1 DEPEND %WinAlert DEFAULT TIMES 0

%act2 DEPEND %WinAlert DEFAULT TIMES 0

%locCloseDownWhenWindowClosesSet LONG  (0)
%SortListbox MULTI LONG  ()
%ThisListbox DEPEND %SortListbox DEFAULT TIMES 0

%ThisListboxHeader DEPEND %SortListbox MULTI DEFAULT TIMES 0

%gloWinEventTesting LONG  (0)
%gloWinEventTestingColor1 LONG  (15728618)
%gloWinEventTestingColor2 LONG  (16777215)
[CALLS]
InsertPmsXmlRq
InsertPmsXmlRs
WebClient
[END]
